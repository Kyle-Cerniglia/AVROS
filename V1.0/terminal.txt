Format
	64 byte buffer
	typing adds to the buffer
	backspace removes from the buffer
	enter adds in termination byte and parses and runs the command
	56 bytes = 7 words of max 8 chars long
	7 bytes = max of 7 spaces between 8 words
	1 byte = 0xFF termination byte

General commands
	sys
	(General system commands)
		info
			print system info
		rst
			reset system
		config
			hardware
				add
					processor
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
					eeprom
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
					eeram
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
					device
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
				remove
					processor
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
					eeprom
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
					eeram
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
					device
						i2c
							0x<i2c addr>
							1 byte hex addr
						spi
							<cs addr>
							2 byte pin
	mem
	(Memory byte management)
		read
			<type>
			i2c
				0x<i2c addr>
				1 byte hex addr
					0x<mem addr>
					2 byte hex addr
			spi
				<cs addr>
				2 byte pin
					0x<mem addr>
					2 byte hex addr
			local
				0x<mem addr>
				2 byte hex addr
		write
			<type>
			i2c
				0x<i2c addr>
				1 byte hex addr
					0x<mem addr>
					2 byte hex addr
			spi
				<cs addr>
					2 byte pin
					0x<mem addr>
					2 byte hex addr
			local
				0x<mem addr>
				2 byte hex addr
		format
			<type>
			i2c
				0x<i2c addr>
				1 byte hex addr
			spi
				<cs addr>
				2 byte pin
			local
	load
	(load file into EERAM)
		<source type>
		i2c
			0x<source i2c addr>
			1 byte hex addr
				0x<source mem addr>
				2 byte hex addr
				<source mem addr>
				2 byte ID number
				<source mem addr>
				8 byte char name
		spi
			<cs addr>
			2 byte pin
				0x<source mem addr>
				2 byte hex addr
				<source mem addr>
				2 byte ID number
				<source mem addr>
				8 byte char name
		<destination type>
		i2c
			0x<destination i2c addr>
			1 byte hex addr
		spi
			<cs addr>
			2 byte pin
	ping
	(Ping peripherials and devices)
		avr
			0x<avr i2c addr>
			1 byte hex addr
			<avr ID>
			2 byte ID
		eeram
			<type>
			i2c
				0x<eeram i2c addr>
				1 byte hex addr
				<eeram ID>
				2 byte ID
			spi
				<cs addr>
				2 byte pin
		eeprom
			<type>
			i2c
				0x<eeprom i2c addr>
				1 byte hex addr
				<eeprom ID>
				2 byte ID
			spi
				<cs addr>
				2 byte pin
		device
			<type>
			i2c
				0x<device i2c addr>
				1 byte hex addr
				<device ID>
				2 byte ID
			spi
				<cs addr>
				2 byte pin
	setdir
	(Change working directory)
		i2c
			0x<eeprom i2c addr>
			1 byte hex addr
			<eeprom ID>
			2 byte ID
		spi
			<cs addr>
			2 byte pin
	listdir
	(List files in current directory)
	open
	(Open .w file in current directory)
		0x<file addr>
		2 byte hex addr
		<file ID>
		2 byte ID
		<file name>
		8 char file name
	run
	(load and run .w file in current directory)
		0x<file addr>
		2 byte hex addr
		<file ID>
		2 byte ID
		<file name>
		8 char file name
